import 'package:hypha_wallet/core/error_handler/model/hypha_error.dart';
import 'package:hypha_wallet/core/network/api/services/graphql_service.dart';
import 'package:hypha_wallet/core/network/models/user_profile_data.dart';
import 'package:hypha_wallet/ui/architecture/result/result.dart';

class ProposalService {
  final GraphQLService _graphQLService;

  const ProposalService(this._graphQLService);

  Future<Result<Map<String, dynamic>, HyphaError>> getActiveProposals(UserProfileData user, int daoId,int first, int offset) async {
    final String query = '{"query":"query ActiveProposals(\$docId: String!, \$first: Int, \$offset: Int) { queryDao(filter: { docId: { eq: \$docId } }) { proposal(first: \$first, offset: \$offset) { docId ... on Poll { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Budget { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Queststart { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Questcomplet { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Policy { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator votetally { ... on VoteTally { pass_votePower_a fail_votePower_a  abstain_votePower_a } } } ... on Circle { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator votetally { ... on VoteTally { pass_votePower_a fail_votePower_a  abstain_votePower_a } } } ... on Payout { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Assignment { details_timeShareX100_i details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Assignbadge { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Role { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Badge { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Suspend { details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Edit { details_timeShareX100_i original { ... on Assignbadge { details_title_s } ... on Assignment { details_title_s } } details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator } ... on Votable { vote { ... on Vote { vote_voter_n vote_vote_s } } votetally { ... on VoteTally { pass_votePower_a fail_votePower_a  abstain_votePower_a } } } } } }","variables":{"docId":"$daoId", "first":$first, "offset":$offset}}';

    return _graphQLService.graphQLQuery(network: user.network, query: query);
  }

  Future<Result<Map<String, dynamic>, HyphaError>> getPastProposals(UserProfileData user, int daoId, int first, int offset) async {
    final String query = '{"query":"query PastProposals(\$docId: String!, \$first: Int, \$offset: Int) { queryDao(filter: { docId: { eq: \$docId } }) { votable(first: \$first, offset: \$offset, order: { desc: createdDate } ) { docId type ... on Payout { details_state_s details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator votetally { ... on VoteTally { pass_votePower_a fail_votePower_a abstain_votePower_a } } } ... on Policy { details_state_s details_title_s details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i ballot_expiration_t creator votetally { ... on VoteTally { pass_votePower_a fail_votePower_a abstain_votePower_a } } } } } }","variables":{"docId":"$daoId", "first":$first, "offset":$offset}}';

    return _graphQLService.graphQLQuery(network: user.network, query: query);
  }

  Future<Result<Map<String, dynamic>, HyphaError>> getProposalDetails(String proposalId, UserProfileData user) async {
    final String query = '{"query":"query proposalDetails(\$docId: String!) { getDocument(docId: \$docId) {docId creator ... on Votable { votetally { ... on VoteTally { pass_votePower_a fail_votePower_a abstain_votePower_a } } pass: voteAggregate(filter: { vote_vote_s: { regexp: \\"/.*pass*./\\" } }) {count} fail: voteAggregate(filter: { vote_vote_s: { regexp: \\"/.*fail*./\\" } }) {count} vote { ... on Vote { vote_voter_n vote_vote_s } }  } ... on Edit {details_title_s details_description_s ballot_expiration_t dao {docId } details_ballotAlignment_i details_ballotQuorum_i} ... on Queststart {details_title_s details_description_s ballot_expiration_t dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Questcomple {details_title_s details_description_s ballot_expiration_t dao {docId}} ... on Policy {details_title_s details_description_s ballot_expiration_t dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Payout {details_title_s details_description_s ballot_expiration_t dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Badge {details_title_s details_description_s dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Poll {details_title_s details_description_s ballot_expiration_t dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Budget {details_title_s details_description_s ballot_expiration_t dao {docId} details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} ... on Assignment {details_title_s details_description_s ballot_expiration_t dao {docId} details_timeShareX100_i details_ballotAlignment_i details_ballotSupply_a details_ballotQuorum_i} } }", "variables":{"docId":"$proposalId"}}';

    return _graphQLService.graphQLQuery(network: user.network, query: query);
  }


}